@page
@model hippolidays.Pages.ApproveModel
@{
}

@functions{
    private string GetFilterClass(string filter)
    {
        if (Model.viewData["filter"] == null && filter == "all")
        {
            return "active";
        }
        return filter == (string)Model.viewData["filter"] ? "active" : "";
    }

    private string GetUpper(string status)
    {
        return status.ToUpper();
    }
}

<div class="text-center">

    <h1 class="display-4">
        Approve Holidays
    </h1>

    <div class="container">
        <ul class="nav justify-content-center navbar-dark">
            <li class="nav-item @GetFilterClass("all")">
                <a class="nav-link" asp-route-filter="" method="post">All</a>
            </li>
            <li class="nav-item @GetFilterClass("approved")">
                <a class="nav-link" asp-route-filter="approved" method="post">Approved</a>
            </li>
            <li class="nav-item @GetFilterClass("pending")">
                <a class="nav-link" asp-route-filter="pending" method="post">Pending</a>
            </li>
            <li class="nav-item @GetFilterClass("rejected")">
                <a class="nav-link" asp-route-filter="rejected" method="post">Rejected</a>
            </li>
            <li class="nav-item @GetFilterClass("cancelled")">
                <a class="nav-link" asp-route-filter="cancelled" method="post">Cancelled</a>
            </li>
        </ul>

        <div class="requests-container">
            @foreach (var item in Model.Requests)
                {
                <div class="row request">
                    <div class="col-9">
                        <div class="upper-case">@Html.DisplayFor(modelItem => item.RequestStatus.Status)</div>
                        <div><b>@Html.DisplayNameFor(model => model.Requests[0].ApplicationUser.Name): </b> @Html.DisplayFor(modelItem => item.ApplicationUser.Name)</div>
                        <div><b>@Html.DisplayNameFor(model => model.Requests[0].RequestType.Type): </b>@Html.DisplayFor(modelItem => item.RequestType.Type)</div>
                        <div><b>@Html.DisplayNameFor(model => model.Requests[0].RequestType.Reason): </b>@Html.DisplayFor(modelItem => item.RequestType.Reason)</div>
                        <div><b>Dates: </b>@String.Format("{0:ddd d MMMM}", item.Start_Date) - @String.Format("{0:ddd d MMMM}", item.End_Date)</div>
                    </div>
                    @if (item.RequestStatus.Status != "approved" && item.RequestStatus.Status != "rejected")
                    {
                        <div class="col-3 text-center my-auto">
                            <form class="text-center my-auto" method="post" asp-page-handler="StatusUpdate" asp-route-id="@item.Request_Id">
                                <button value="approved" name="status" class="btn btn-outline-primary btn-sm">Approve</button>
                                <button value="rejected" name="status" class="btn btn-outline-primary btn-sm">Reject</button>
                            </form>
                        </div>
                        }
                </div>
                }
        </div>
    </div>

</div>